server:
  tomcat:
    uri-encoding: UTF-8

spring:
  # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 数据源 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #        password: Q0eJGTbRlTvTnjRFj76Vkbdo9H4PmEtC4DVBHHISQl2Y4+CC5Ohg3NTQ/Ah+c/FDe1jjqzx02DoAnXFyrokEDA==
    password: 111111
    url: jdbc:mysql://localhost:3306/quartz?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false
    username: root
    # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ Druid 连接池配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
    ## Druid连接池配置，配置参考：https://blog.csdn.net/weixin_38187317/article/details/81562571
    druid:
      ## 初始化大小
      initial-size: 5
      ## 最大
      maxActive: 20
      ## 最小
      min-idle: 5
      ## 连接等待超时时间
      maxWait: 60000
      ## 配置隔多久进行一次检测(检测可以关闭的空闲连接)
      timeBetweenEvictionRunsMillis: 60000
      ## 配置连接在池中的最小生存时间
      minEvictableIdleTimeMillis: 300000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      ## 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      ### 配置监控统计拦截的filters，去掉后监控界面sql无法统计
      ## config:指定了之后就会读取并解密数据库密码
      ## stat:统计相关
      ## wall:sql防火墙相关，防止SQL注入
      ## slf4j:日志相关
      filters: config,stat,wall,slf4j
      ## 监控过滤
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      ## 监控页面配置
      stat-view-servlet:
        # 是否允许重置数据 禁用HTML页面上的“Reset All”功能
        reset-enable: true
        # 帐号
        login-password: 123456
        # 密码
        login-username: admin
        # 页面地址
        url-pattern: /druid/*
        # 白名单 多个ip逗号隔开
        allow: 127.0.0.1,192.168.163.1
        # IP黑名单 (存在共同时，deny优先于allow) : 如果满足deny的话提示:Sorry, you are not permitted to view this page.
        deny: 192.168.1.73
      # druid数据库密码加密看这里:https://blog.csdn.net/k21325/article/details/78627824
      # 加密命令:
      # C:\Users\asus\.m2\repository\com\alibaba\druid\1.0.29>
      # java -cp .\druid-1.0.29.jar com.alibaba.druid.filter.config.ConfigTools your password
      # 直接在IDEA工具打开CMD窗口
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录, config.decrypt=true;config.decrypt.key={公钥}
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;config.decrypt=false;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBANSTMPRbGPKQL55fGaMa9J2SiUfydGq83Vnkgufl869dfIV6eY93VZLHNzxruvwjSlevm1m+xqDqWPF1Xq48/7cCAwEAAQ==


  # ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ quartz配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
  quartz:
    ## 任务页面配置
    task-view:
      # 帐号
      login-username: admin
      # 密码
      login-password: 123456
    #相关属性配置
    properties:
      org:
        quartz:
          # 线程调度器
          scheduler:
            # 线程调度器实例名
            instanceName: myQuartzScheduler
            instanceId: AUTO
          # 如何存储任务和触发器等信息
          jobStore:
            # 默认存储在内存中 org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
            # 持久化
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            # 驱动代理
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            # 数据库中表的前缀
            tablePrefix: qrtz_
            # 是否集群
            isClustered: false
            clusterCheckinInterval: 10000
            useProperties: false
            # 数据源命名
            dataSource: quartzDataSource
            misfireThreshold: 5000
          # 线程池
          threadPool:
            # 实例化ThreadPool时，使用的线程类为SimpleThreadPool
            class: org.quartz.simpl.SimpleThreadPool
            # 并发个数, 线程池的线程数，即最多3个任务同时跑
            threadCount: 3
            # 优先级
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true
    #数据库方式
    job-store-type: jdbc
      #初始化表结构
      #jdbc:
    #initialize-schema: never

# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ MyBatis Plus 配置 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
mybatis-plus:
  # mybatis mapper文件的位置
  mapper-locations: classpath*:/mapper/**/*.xml
  # 扫描mapper接口类的位置,在此处指明扫描实体类的包，在mapper.xml中就可以不用写pojo类的全路径名了
  type-aliases-package: com.leigq.quartz.domain.mapper
  configuration:
    # 使用mybatis插入自增主键ID的数据后返回自增的ID，配合keyProperty="id"使用
    use-generated-keys: true
    # 设置自动驼峰命名转换
    map-underscore-to-camel-case: true
#    config-location: classpath:mybatis-config.xml


# ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ 日志 ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ #
# 默认情况下，spring boot从控制台打印出来的日志级别只有ERROR, WARN 还有INFO，如果你想要打印debug级别的日志，可以通过配置debug=true
debug: false
logging:
  config: classpath:config/log4j2-config.xml


